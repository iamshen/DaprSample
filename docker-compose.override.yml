version: '3.4'

services:
  postgres:
    container_name: postgres
    restart: always
    volumes: 
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: dapr
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: Local@Db

  rabbitmq:
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=dapr
      - RABBITMQ_DEFAULT_PASS=123456

#  redis:
#    ports:
#      - "5379:6379"

  zipkin:
    ports:
      - "5411:9411"

  dapr-placement:
    command: ["./placement", "-port", "50000", "-log-level", "debug"]
    ports:
      - "50000:50000"

  ordering-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
    ports:
      - "5101:80"
      - "50001:50001"
  
  ordering-api-dapr:
    command: ["./daprd",
      "-app-id", "ordering-api",
      "-app-port", "80",
      "-log-level", "debug",
      "-placement-host-address", "dapr-placement:50000",
      "-components-path", "/components",
      "-config", "/configuration/gold-config.yaml"
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  ordering-host:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
    ports:
      - "5201:80"
      - "52001:50001"
  
  ordering-host-dapr:
    command: ["./daprd",
      "-app-id", "ordering-host",
      "-app-port", "80",
      "-log-level", "debug",
      "-placement-host-address", "dapr-placement:50000",
      "-components-path", "/components",
      "-config", "/configuration/gold-config.yaml"
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"


volumes:
  pgdata: