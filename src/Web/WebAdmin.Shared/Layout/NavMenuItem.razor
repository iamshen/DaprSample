@using NavLink = WebAdmin.Shared.Records.NavLink
@inject IStringLocalizer<NavMenu> L

@switch (Value)
{
    case NavGroup group:
        <FluentNavGroup Expanded="@group.Expanded" Gap="@group.Gap" Icon="@group.Icon">
            <TitleTemplate>
                <h3>@L[group.Name]</h3>
            </TitleTemplate>
            <ChildContent>
                @foreach (var item in group.Children)
                {
                    <NavMenuItem Value="item" ValueChanged="@(() => OnNavLinkClick(item))"/>
                }
            </ChildContent>
        </FluentNavGroup>
        break;
    case NavLink:
        <FluentNavLink Icon="@Value.Icon" Href="@Value.Href" Match="@Value.Match" OnClick="@(() => OnNavLinkClick(Value))">
            @if (Value.Match is NavLinkMatch.All)
            {
                <h3>@L[Value.Name]</h3>
            }
            else
            {
                @L[Value.Name]
            }
        </FluentNavLink>
        break;
}

@code {
    [Parameter] [EditorRequired] public required NavItem Value { get; set; }

    [Parameter] public EventCallback<NavItem> ValueChanged { get; set; }

    public async Task OnNavLinkClick(NavItem item)
    {
        await ValueChanged.InvokeAsync(item);
    }

}