@page "/weather"
@inject IStringLocalizer<Weather> L
@inject AdminConfiguration AdminConfiguration
@attribute [StreamRendering]

<PageTitle>@L["PageTitle"] - @AdminConfiguration.PageTitle</PageTitle>

<h2>Weather</h2>

<p>该组件用于显示数据。</p>

<FluentCard>
    <h3>DataGrid</h3>
    <FluentStack VerticalAlignment="VerticalAlignment.Center" HorizontalAlignment="HorizontalAlignment.Center">
        
        <FluentDataGrid Id="weathergrid" Items="@forecasts" GridTemplateColumns="1fr 1fr 1fr 2fr" TGridItem="WeatherForecast">
            <PropertyColumn Title="Date" Sortable="true" Property="@(c => c!.Date)" Align="Align.Start" />
            <PropertyColumn Title="Temp. (C)" Sortable="true" Property="@(c => c!.TemperatureC)" Align="Align.Center" />
            <PropertyColumn Title="Temp. (F)" Sortable="true" Property="@(c => c!.TemperatureF)" Align="Align.Center" />
            <PropertyColumn Title="Summary" Property="@(c => c!.Summary)" Align="Align.End" />
        </FluentDataGrid>

    </FluentStack>
</FluentCard>




@code {
    private IQueryable<WeatherForecast>? forecasts;

    protected override async Task OnInitializedAsync()
    {
        await OnQueryAsync();

        StateHasChanged();
    }
    public async Task<bool> OnRefreshAsync()
    {
        await OnQueryAsync();

        return true;
    }
    private async Task OnQueryAsync()
    {
        await Task.Delay(Random.Shared.Next(400, 800));

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
        {
            Date = startDate.AddDays(index),
            TemperatureC = Random.Shared.Next(-20, 55),
            Summary = summaries[Random.Shared.Next(summaries.Length)]
        }).AsQueryable();
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
